#!/bin/bash
# nimagen_to_GEL_VCF
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://documentation.dnanexus.com/developer for tutorials on how
# to modify this file.

# The following line causes bash to exit at any point if there is any error
# and to output each line as it is executed -- useful for debugging
set -e -x -o pipefail

main() {

    # Store the vcf file name as a string
    vcf_file=$input_vcf_name

    # Remove .vcf extension from vcf file name
    vcf_prefix="${vcf_file%.vcf.gz}"

    # Download vcf and index files
    dx download "$input_vcf" -o "$vcf_file"
    dx download "$input_vcf_index" -o "$input_vcf_index_name"
    dx download "$fasta_file" -o fasta_file
    dx download "$header_txt" -o header_txt

    # Use bcftools annotate to fill in missing header lines
    bcftools annotate -h header_txt $vcf_file > correct_header.vcf

    # Update reference fasta
    sed 's+file://genome/GRCh38.no_alt_analysis_set.fa+http://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/GRCh38_reference_genome/GRCh38_full_analysis_set_plus_decoy_hla.fa+g' correct_header.vcf > correct_header2.vcf

    # Update sample ID in vcf
    index=2     # SampleID field index of GM number (if pre-Epic sample)
    old_id=$(grep -m1 "^#CHROM" correct_header2.vcf | awk -F "\t" '{print $NF}')
    echo $old_id | awk -F "_" '{print $1}' | awk -F"-" -v Index=$index '{print $Index}' | sed 's/./&./4' > field2
    if [[ $(cat $field2) == GM* ]]; then
        cat $field2 > correct_sample_id
    else
        echo $old_id | awk -F "_" '{print $1}' > correct_sample_id
    fi
    bcftools reheader -s correct_sample_id correct_header2.vcf > fixed_header.vcf

    # Update date
    sed "s/yyyymmdd/$(date '+%Y%m%d')/g" fixed_header.vcf > fixed_date_header.vcf

    # Split multiallelic variants
    bcftools norm -f fasta_file -m -any fixed_date_header.vcf -o correct_header_date_split_multiallelics.vcf

    # Add PASS to SNPs that have DP > 99 and LOW_DP to SNPs <= 99
    vcf_sample_name=$(cat correct_sample_id)
    GEL_vcf="${vcf_sample_name}_GEL.vcf"
    bcftools filter -s "LOW_DP" --mode +x -i "INFO/DP > 99" -o "${GEL_vcf}" correct_header_date_split_multiallelics.vcf

    # Upload output file
    GEL_vcf=$(dx upload $GEL_vcf --brief)
    dx-jobutil-add-output GEL_vcf "$GEL_vcf" --class=file
}
